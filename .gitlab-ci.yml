stages:
  - build
  - appium

variables:
  LANG: "en_US.UTF-8"
  LC_ALL: "en_US.UTF-8"
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "120"
  GIT_STRATEGY: fetch

.cache:
  key:
    files:
      - Gemfile.lock
      - Podfile.lock
  paths:
    - ~/.bundle
    - ~/.gem

build:
  stage: build
  script:
    - fastlane full_pipeline
    - pwd
    - ls -al
  artifacts:
    paths:
      - "build/CounterApp.app"
    expire_in: 10 minutes
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
  tags:
    - thj-mac-m1-runner

.local:appium:
  stage: appium
  script:
    - pwd
    - ls -al
    - fastlane local_appium
  needs:
    - build
  tags:
    - thj-mac-m1-runner

gitlab:appium:
  stage: appium
  before_script:
    - export NVM_DIR="$HOME/.nvm"
    - source "$NVM_DIR/nvm.sh"
    - nvm install 22
    - nvm use 22
    - echo "export NVM_DIR=\"$HOME/.nvm\"" >> ~/.bashrc
    - echo "source \"$NVM_DIR/nvm.sh\"" >> ~/.bashrc
    - echo "nvm use 22" >> ~/.bashrc
    - node -v  # ✅ 현재 Node.js 버전 확인
    - cd appium  # Appium 테스트 디렉토리로 이동
    - npm install  # ✅ 모듈 설치
  script:
    - source ~/.bashrc  # ✅ NVM 환경 강제 로드
    - node -v  # ✅ 다시 현재 Node.js 버전 확인 (22가 출력돼야 함)
    - pwd
    - ls -al
    - ls -al build/
    - mv ../build/CounterApp.app CounterApp.app

    # 프로젝트마다 변경 필요
    - export IP_APP="../CounterApp.app"
    - export IP_PLATFORM="iOS"
    - export IP_DEVICE_NAME="iPhone 16 Pro"
    - export IP_PLATFORM_VERSION="18.2"
    - export IP_APPIUM_HOST="127.0.0.1"
    - export IP_APPIUM_PORT="4723"
    - export IP_AUTOMATION_NAME="XCUITest"
    - export IP_MAX_RETRIES="3"
    #

    - fastlane gitlab_appium
  needs:
    - job: build
      artifacts: true # build 단계에서 생성한 아티팩트 사용 (자동 다운로드)
  tags:
    - thj-mac-m1-runner
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
