default_platform(:ios)

platform :ios do
  desc "Build iOS app without signing"
  lane :xcode_build do
    UI.message("🚀 Running xcodebuild for CounterApp...")
  
    sh "xcodebuild -project ../CounterApp.xcodeproj -scheme CounterApp -sdk iphonesimulator clean build"
    UI.message("✅ Build completed!")
  end

  lane :build do
    increment_build_number(xcodeproj: "CounterApp.xcodeproj")

    build_app(
      project: "CounterApp.xcodeproj",  # ✅ `workspace` 대신 `project` 사용
      scheme: "CounterApp",
      clean: true,
      output_directory: "./build",
      sdk: "iphonesimulator",
      skip_package_ipa: true,
      skip_codesigning: true,
      derived_data_path: "./build/DerivedData"
    )
  end

  desc "Move CounterApp.app to ./build"
  lane :move_app do
    derived_data_path = "#{ENV['HOME']}/Library/Developer/Xcode/DerivedData"
    search_pattern = "#{derived_data_path}/**/Build/Products/Debug-iphonesimulator/CounterApp.app"
  # cp -r /Users/totohyojuntak/Library/Developer/Xcode/DerivedData/CounterApp-fssklyrojculuceiyuwtsvamanoz/Build/Products/Debug-iphonesimulator/CounterApp.app ./build/CounterApp.app
    # 📌 최신 수정된 `CounterApp.app` 찾기
    app_source_path = Dir.glob(search_pattern).max_by { |f| File.mtime(f) }
    app_target_path = "../build/CounterApp.app"
  
    if app_source_path && File.exist?(app_source_path)
      sh "mkdir -p ../build"
      sh "cp -r #{app_source_path} #{app_target_path}"
      UI.message("✅ Moved latest CounterApp.app from #{app_source_path} to #{app_target_path}")
    else
      UI.error("❌ CounterApp.app not found in DerivedData")
      exit(1)
    end
  end

  # desc "Upload CounterApp.app to S3"
  # lane :upload_to_s3 do
  #   s3_bucket = "your-s3-bucket-name" # 👉 여기 S3 버킷 이름 입력
  #   s3_path = "s3://#{s3_bucket}/CounterApp.app"
    
  #   if File.exist?("./build/CounterApp.app")
  #     sh "aws s3 cp ./build/CounterApp.app #{s3_path}"
  #     UI.message("✅ CounterApp.app uploaded to S3: #{s3_path}")
  #   else
  #     UI.error("❌ CounterApp.app not found in ./build/")
  #   end
  # end

  desc "Run Appium tests on iOS Simulator"
  lane :local_appium do
    UI.message("🚀 Running Appium tests...")

    # ✅ Appium 테스트 실행 (Node.js 환경에서 실행)
    sh "bash ../appium/5-test-appium.sh"

    UI.message("✅ Appium tests completed!")
  end
  
  lane :gitlab_appium do |options|
    #app = options[:app] || "CounterApp.app"
    # ✅ CounterApp.app 위치 확인
    app_path = File.expand_path("../CounterApp.app") # 현재 디렉토리 기준

    # ✅ Appium 환경 변수로 설정
    ENV["APP_PATH"] = app_path

    device_name = options[:device_name] || "iPhone 16 Pro"
    platform_version = options[:os_name] || "18.2"
    platform = options[:platform] || "iOS"

    appium_host = "127.0.0.1"
    appium_port = 4723
    automation_name = "XCUITest"
    max_retries = 2

    UI.message("🚀 Running Appium tests...")

    # ✅ Appium 테스트 실행 (Node.js 환경에서 실행)
    #sh "IP_APP='#{app_path}' IP_PLATFORM='#{platform}' IP_DEVICE_NAME='#{device_name}' IP_PLATFORM_VERSION='#{platform_version}' IP_APPIUM_HOST='#{appium_host}' IP_APPIUM_PORT='#{appium_port}' IP_AUTOMATION_NAME='#{automation_name}' IP_MAX_RETRIES='#{max_retries}' bash ../appium/5-test-gitlab-appium.sh"
    app_path = ENV['IP_APP'] || "default_path.app"
    platform = ENV['IP_PLATFORM'] || "iOS"
    device_name = ENV['IP_DEVICE_NAME'] || "iPhone 16 Pro"
    platform_version = ENV['IP_PLATFORM_VERSION'] || "18.2"
    appium_host = ENV['IP_APPIUM_HOST'] || "127.0.0.1"
    appium_port = ENV['IP_APPIUM_PORT'] || "4723"
    automation_name = ENV['IP_AUTOMATION_NAME'] || "XCUITest"
    max_retries = ENV['IP_MAX_RETRIES'] || "3"
  
    sh "IP_APP='#{app_path}' IP_PLATFORM='#{platform}' IP_DEVICE_NAME='#{device_name}' IP_PLATFORM_VERSION='#{platform_version}' IP_APPIUM_HOST='#{appium_host}' IP_APPIUM_PORT='#{appium_port}' IP_AUTOMATION_NAME='#{automation_name}' IP_MAX_RETRIES='#{max_retries}' bash ../appium/5-test-gitlab-appium.sh"
  
    UI.message("✅ Appium tests completed!")
  end

  desc "Run full build pipeline (Build → Move → Upload)"
  lane :full_pipeline do
    xcode_build
    move_app
    #upload_to_s3
  end
end